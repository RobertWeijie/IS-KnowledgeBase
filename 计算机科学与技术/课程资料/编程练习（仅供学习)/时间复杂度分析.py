#!/usr/bin/env python3

def mysterious_func2(L, t):
	m = 0//常数时间操作，复杂度为 O(1)。
	for i in range (1, len(L) + 1)://这个循环会迭代 n 次，其中 n 是列表 L 的长度。因此，它的复杂度为 O(n)。
	j = i -1 //常数时间操作，复杂度为 O(1)。
	p = 1//常数时间操作，复杂度为 O(1)。
	while j >= 0 and p*L[j] <= t://这个循环最多迭代 n 次，因为 j 的初始值为 i - 1，每次循环 j 都会减少 1，因此最多可以循环 n 次。每次循环中，pL[j] <= t 是一个常数时间操作，因此这个循环的总复杂度是 O(n)。
		p = p*L[j]//常数时间操作，复杂度为 O(1)。
		j -= 1//常数时间操作，复杂度为 O(1)。
	j += 1//常数时间操作，复杂度为 O(1)。
	if i - j > m://常数时间操作，复杂度为 O(1)。
		m = i - j//常数时间操作，复杂度为 O(1)。
	return m


一共复杂度O(n^2)